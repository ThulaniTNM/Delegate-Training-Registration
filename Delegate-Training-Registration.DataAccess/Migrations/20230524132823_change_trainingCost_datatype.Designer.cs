// <auto-generated />
using System;
using Delegate_Training_Registration.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Delegate_Training_Registration.DataAccess.Migrations
{
    [DbContext(typeof(DelegateTrainingRegistrationContext))]
    [Migration("20230524132823_change_trainingCost_datatype")]
    partial class change_trainingCost_datatype
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.Course", b =>
                {
                    b.Property<Guid>("CourseCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseCode");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.Person", b =>
                {
                    b.Property<Guid>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dietary")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("PersonID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.PhysicalAddress", b =>
                {
                    b.Property<Guid>("PhysicalAddressesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("PersonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhysicalAddressesID");

                    b.HasIndex("PersonID");

                    b.ToTable("PhysicalAddresses");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.RegisteredTrainings", b =>
                {
                    b.Property<Guid>("RegisteredTrainingsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("PersonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RegisteredTrainingsID");

                    b.HasIndex("PersonID");

                    b.HasIndex("TrainingID");

                    b.ToTable("RegisteredTrainings");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.Training", b =>
                {
                    b.Property<Guid>("TrainingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<Guid>("CourseCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TrainingCost")
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrainingRegistrationClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingVenue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingID");

                    b.HasIndex("CourseCode");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.PhysicalAddress", b =>
                {
                    b.HasOne("Delegate_Training_Registration.DataAccess.Models.Person", "Person")
                        .WithMany("PhysicalAddresses")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.RegisteredTrainings", b =>
                {
                    b.HasOne("Delegate_Training_Registration.DataAccess.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Delegate_Training_Registration.DataAccess.Models.Training", "Training")
                        .WithMany()
                        .HasForeignKey("TrainingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.Training", b =>
                {
                    b.HasOne("Delegate_Training_Registration.DataAccess.Models.Course", "Course")
                        .WithMany("Trainings")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.Course", b =>
                {
                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("Delegate_Training_Registration.DataAccess.Models.Person", b =>
                {
                    b.Navigation("PhysicalAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
